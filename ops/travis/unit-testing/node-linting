#!/bin/bash

FOLDER_CHECKS="js eslintrc json"

before_install() {
    if [ -n "$(bash ops/travis/helpers/test_for_changes $FOLDER_CHECKS)" ];
    then
        bash ops/travis/helpers/show_system_versions
    fi
}

install() {
    if [ -n "$(bash ops/travis/helpers/test_for_changes $FOLDER_CHECKS)" ];
    then
        npm install -g npm@latest
        npm install
        cd services/web/client
        npm install
        node_modules/.bin/qx compile --target=build --machine-readable
        node_modules/.bin/qx serve --machine-readable --target=build  --listen-port=8080 &
        SERVER_PID=$!
        sleep 20
        node build-output/resource/qxl/testtapper/run.js http://localhost:8080
        kill $SERVER_PID
        rm build-output/*.json
    fi
}

before_script() {
    if [ -n "$(bash ops/travis/helpers/test_for_changes $FOLDER_CHECKS)" ];
    then
        eslint --version
    fi
}

script() {
    if [ -n "$(bash ops/travis/helpers/test_for_changes $FOLDER_CHECKS)" ];
    then
        npm run linter
        npm run qx compile --target=build
        npm run qx
    else
        echo "No changes detected. Skipping unit-testing of $FOLDERS_CHECKS ."
    fi
}

after_success() {
    if [ -n "$(bash ops/travis/helpers/test_for_changes $FOLDER_CHECKS)" ];
    then
        echo "linting successful"
    fi
}

# Check if the function exists (bash specific)
if declare -f "$1" > /dev/null
then
  # call arguments verbatim
  "$@"
else
  # Show a helpful error
  echo "'$1' is not a known function name" >&2
  exit 1
fi
